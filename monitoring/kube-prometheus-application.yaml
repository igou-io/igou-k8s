apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus
  namespace: default
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: default
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 9.3.4
    chart: kube-prometheus-stack
    helm:
      valueFiles:
      - values.yaml
      values: |-
        defaultRules:
          rules:
            kubeApiserverAvailability: true
            kubeApiserver: true
        server:
          resources:
            requests:
              memory: 1000Mi
              cpu: 25m
            limits:
              memory: 2000Mi
        prometheusOperator:
          tlsProxy:
            enabled: false
          image:
            repository: carlosedp/prometheus-operator
            tag: v0.40.0
            pullPolicy: IfNotPresent
          createCustomResource: true
          prometheusConfigReloaderImage:
            repository: quay.io/coreos/prometheus-config-reloader
            tag: v0.39.0
          configmapReloadImage:
            repository: jimmidyson/configmap-reload
            tag: v0.3.0
        alertmanager:
          config:
            global:
              resolve_timeout: 5m
          ingress:
            enabled: true
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
              ingress.kubernetes.io/auth-secret: ingress-auth
              ingress.kubernetes.io/auth-type: basic
            hosts:
            - "alertmanager.igou.io"
            tls:
            - hosts:
              - "alertmanager.igou.io"
              secretName: alertmanager-acme-certificate
        nodeExporter:
          serviceMonitor:
            relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
              - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
        grafana:
          image:
            repository: grafana/grafana
            tag: 7.1.5
          deploymentStrategy:
            type: Recreate
          persistence:
            enabled: false
          ingress:
            enabled: true
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
            hosts:
            - "grafana.igou.io"
            tls:
            - hosts:
              - "grafana.igou.io"
              secretName: grafana-acme-certificate
          sidecar:
            image: 
              repository: kiwigrid/k8s-sidecar
              tag: 0.1.193
            datasources:
              enabled: true
              defaultDatasourceEnabled: true
            dashboards:
              enabled: true
              searchNamespace: ALL
              provider:
                disableDelete: false
                allowUiUpdates: true
          plugins:
          - natel-discrete-panel
          - pr0ps-trackmap-panel
          - grafana-piechart-panel
          - vonage-status-panel
          - grafana-worldmap-panel
          - grafana-clock-panel
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
              - name: 'default'
                orgId: 1
                folder: ''
                type: file
                disableDeletion: false
                allowUiUpdates: true
                editable: true
                options:
                  path: /var/lib/grafana/dashboards/default
          dashboards:
            default:
              nginx-dashboard:
                url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
                datasource: Prometheus
          additionalDataSources:
          - name: loki
            type: loki
            access: proxy
            url: http://loki:3100
          grafana.ini:
            paths:
              data: /var/lib/grafana/data
              logs: /var/log/grafana
              plugins: /var/lib/grafana/plugins
              provisioning: /etc/grafana/provisioning
            analytics:
              check_for_updates: true
            log:
              mode: console
            grafana_net:
              url: https://grafana.net
        kube-state-metrics:
          image:
            repository: "carlosedp/kube-state-metrics"
            tag: "v1.9.6"
        kubeEtcd:
          enabled: true
        kubeControllerManager:
          enabled: true
        kubeScheduler:
          enabled: true
        kubeProxy:
          enabled: true
        kubelet:
          serviceMonitor:
            metricRelabelings:
            - action: replace
              sourceLabels:
              - node
              targetLabel: instance
        prometheus:
          ingress:
            enabled: true
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
              ingress.kubernetes.io/auth-secret: ingress-auth
              ingress.kubernetes.io/auth-type: basic
            hosts:
            - "prometheus.igou.io"
            tls:
            - hosts:
              - "prometheus.igou.io"
              secretName: prometheus-acme-certificate
          prometheusSpec:
            ruleSelector: {}
            ruleNamespaceSelector: {}
            ruleSelectorNilUsesHelmValues: false
            serviceMonitorSelector: {}
            serviceMonitorNamespaceSelector: {}
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelector: {}
            podMonitorNamespaceSelector: {}
            podMonitorSelectorNilUsesHelmValues: false
            retention: 60d
            enableAdminAPI: true
            walCompression: true
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: "local-path"
                  resources:
                    requests:
                      storage: 50Gi
            additionalScrapeConfigs:
            - job_name: 'minio'
              metrics_path: /minio/prometheus/metrics
              static_configs:
              - targets:
                - 192.168.1.2:80
