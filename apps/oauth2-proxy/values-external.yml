oauth2-proxy:
  # Force the target Kubernetes version (it uses Helm `.Capabilities` if not set).
  # This is especially useful for `helm template` as capabilities are always empty
  # due to the fact that it doesn't query an actual cluster

  # Oauth client configuration specifics
  config:
    existingSecret: oauth2-proxy-secret
    configFile: |-
      email_domains = "*"
      provider = "github"
      github_org = "igou-io"
      github_team = "k8s"
      scope = "user:email"
    # Custom configuration file: oauth2_proxy.cfg
    # configFile: |-
    #   pass_basic_auth = false
    #   pass_access_token = true
    # Use an existing config map (see configmap.yaml for required fields)
    # Example:
    # existingConfig: config
  
  extraArgs:
    whitelist-domain: .igou.io
    cookie-domain: .igou.io
    exclude-logging-path: "/ping"
  extraEnv: []
  
  ingress:
    enabled: true
    className: nginx
    path: /
    # Only used if API capabilities (networking.k8s.io/v1) allow it
    pathType: ImplementationSpecific
    # Used to create an Ingress record.
    hosts:
      - oauth.igou.io
    # Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
    # Warning! The configuration is dependant on your current k8s API version capabilities (networking.k8s.io/v1)
    # extraPaths:
    # - path: /*
    #   pathType: ImplementationSpecific
    #   backend:
    #     service:
    #       name: ssl-redirect
    #       port:
    #         name: use-annotation
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      ingress.kubernetes.io/ssl-redirect: 'true'
    #   kubernetes.io/tls-acme: "true"
    tls:
      # Secrets must be manually created in the namespace.
      - secretName: oauth.igou.io-tls
        hosts:
          - oauth.igou.io
